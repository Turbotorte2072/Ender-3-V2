# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[include fluidd.cfg]

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[temperature_sensor raspberry_pi]

sensor_type: temperature_host
min_temp: 10
max_temp: 85

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 60

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: -20
position_min: -20
position_max: 204.0
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: -10
position_min: -10
position_max: 235
homing_speed: 50

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: 42
y_offset: 10
#z_offset: 2.950

[safe_z_home] 
home_xy_position: 117.5,117.5 # Change coordinates to the center of your print bed
speed: 100
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop: 10                 # Move up 10mm 
z_hop_speed: 5

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 28, 28
mesh_max: 165, 193
probe_count: 3,3
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[screws_tilt_adjust]
screw1: -20,20
screw1_name: front left screw
screw2: 150,20
screw2_name: front right screw
screw3: 150,187
screw3_name: rear right screw
screw4: -20,187
screw4_name: rear left screw
horizontal_move_z: 10
speed: 100
screw_thread: CW-M4

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 250
position_min: -2

[extruder]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
rotation_distance: 22.30096858166667
full_steps_per_rotation: 200
gear_ratio: 50:17
microsteps: 16
max_extrude_only_distance: 150.0
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 260
pressure_advance: 0.052

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[input_shaper]
shaper_freq_x: 38.9  # frequency for the X mark of the test model
shaper_freq_y: 48.3  # frequency for the Y mark of the test model
shaper_type: mzv

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    BED_MESH_CLEAR                 ; remove saved mesh
    G28                            ; home all axes
    BED_MESH_CALIBRATE             ; create new mesh
    G1 Z20 F1000                   ; move nozzle away from bed

[gcode_macro END_PRINT]
gcode:
        #Get Printer built volume dimensions
        {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
        {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}

        #Fix-up extruder
        G91
        G1 E-2 F2700
        G1 E-1.5 Z0.2 F2400
        G1 X5 Y5 F6000
        G1 Z10
        G90

        #Present print
        G1 Z{printer.toolhead.position.z + 10} F600
        G1 X{X_MAX / 2} Y{Y_MAX} F1500
        M106 S0
        M104 S0
        M140 S0

        #Disable Steppers
        M84 X Y E

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 0.305
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.127500, 0.100000, 0.127500
#*# 	  0.052500, -0.007500, -0.022500
#*# 	  0.140000, 0.127500, 0.127500
#*# tension = 0.2
#*# min_x = 28.0
#*# algo = bicubic
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 28.0
#*# x_count = 3
#*# max_y = 193.0
#*# mesh_x_pps = 2
#*# max_x = 165.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.715
#*# pid_ki = 1.013
#*# pid_kd = 138.734
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.254
#*# pid_ki = 1.602
#*# pid_kd = 860.421
#*#
#*# [bed_mesh 60 Grad]
#*# version = 1
#*# points =
#*# 	0.125000, 0.102500, 0.132500
#*# 	0.047500, -0.010000, -0.017500
#*# 	0.132500, 0.127500, 0.132500
#*# tension = 0.2
#*# min_x = 28.0
#*# algo = bicubic
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 28.0
#*# x_count = 3
#*# max_y = 193.0
#*# mesh_x_pps = 2
#*# max_x = 165.0
